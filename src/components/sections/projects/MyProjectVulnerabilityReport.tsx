'use client'

import {ArrowLeft, VerifiedIcon} from 'lucide-react'
import {notFound, useRouter} from 'next/navigation'
import {DateTime} from 'luxon'

import FindingDetails from '../finding/FindingDetails'

import {Button} from '@/components/ui/Button'
import Separator from '@/components/ui/Separator'
import {useGetFinding} from '@/lib/queries/finding/getFinding'
import Skeleton from '@/components/ui/Skeleton'
import {formatDate} from '@/lib/utils/common/format'
import {Tabs, TabsTrigger, TabsList} from '@/components/ui/Tabs'

type MyProjectVulnerabilityReportProps = {
  findingId: string
}

const MyProjectVulnerabilityReport = ({
  findingId,
}: MyProjectVulnerabilityReportProps) => {
  const {data, isLoading} = useGetFinding({findingId})
  const router = useRouter()

  if (isLoading) {
    return (
      <div className="px-24">
        <div className="mb-12">
          <Skeleton className="h-[72px]" />
        </div>
        <Separator />
        <div className="mt-12 flex flex-col gap-3">
          <Skeleton className="h-[72px]" />
          <Skeleton className="h-[72px]" />
          <Skeleton className="h-[72px]" />
        </div>
      </div>
    )
  }

  if (!data) {
    return notFound()
  }

  return (
    <>
      <div className="px-24">
        <div className="flex items-center gap-12">
          <Button
            variant="outline"
            size="small"
            className="flex gap-2"
            onClick={() => router.back()}>
            <ArrowLeft width={16} height={16} />
            Go Back
          </Button>
          <div className="flex flex-col gap-3">
            <div className="flex items-center gap-6">
              <h1 className="text-headlineS">{data.title}</h1>
              {data.deduplicatedFinding?.bestFindingId === data.id && (
                <div className="flex items-center gap-1">
                  <VerifiedIcon width={24} height={24} />
                  <span className="text-bodyS">Best</span>
                </div>
              )}
            </div>
            <span className="text-titleS">
              {data.deduplicatedFinding?.title}
            </span>
          </div>
        </div>
      </div>
      <div className="mt-12 flex flex-grow flex-col">
        <Tabs value="report_detail">
          <TabsList className="self-start px-24">
            <TabsTrigger value="report_detail">report detail</TabsTrigger>
          </TabsList>
        </Tabs>
        <Separator />
        <div className="flex flex-grow flex-col bg-black px-24 pb-24 pt-12">
          <div className="mt-12 xl:mx-[340px]">
            <div className="mb-12 flex gap-12">
              <div className="flex flex-col">
                <span className="text-bodyL text-purple-light">
                  Submitted by
                </span>
                <span className="text-bodyM">
                  {data.author.alias ?? data.author.id}
                </span>
              </div>
              <div className="flex flex-col">
                <span className="text-bodyL text-purple-light">
                  Date of submission
                </span>
                <span className="text-bodyM">
                  {formatDate(data.createdAt, DateTime.DATETIME_MED)}
                </span>
              </div>
            </div>

            <div className="mb-12 flex flex-col gap-3">
              <h3 className="text-bodyL text-purple-light">
                Links to affected code
              </h3>
              {data.affectedFiles.map((fileUrl) => (
                <Link href={fileUrl} key={fileUrl} className="flex gap-3">
                  <span>{fileUrl}</span>
                  <LinkIcon width={24} height={24} />
                </Link>
              ))}
            </div>

            <div className="mb-12 flex flex-col gap-3">
              <h3 className="text-bodyL text-purple-light">Severity level</h3>
              <div>
                <FindingSeverityBadge severity={data.severity} />
              </div>
            </div>

            <div className="mb-12 flex flex-col gap-3">
              <h3 className="text-bodyL text-purple-light">Report title</h3>
              <span className="text-bodyM">{data.title}</span>
            </div>

            <div className="mb-12 flex flex-col gap-3">
              <h3 className="text-bodyL text-purple-light">Description</h3>
              <p className="text-bodyM">{data.description}</p>
            </div>

            <div className="mb-12 flex flex-col gap-3">
              <h3 className="text-bodyL text-purple-light">Proof of concept</h3>
              <p className="text-bodyM">{data.proofOfConcept}</p>
            </div>

            <div className="mb-12 flex flex-col gap-3">
              <h3 className="text-bodyL text-purple-light">Uploaded files</h3>
              <div className="flex flex-wrap items-center gap-3">
                {data.findingAttachments.length > 0 ? (
                  data.findingAttachments.map((attachment) => (
                    <Link
                      key={attachment.attachmentUrl}
                      href={attachment.attachmentUrl}
                      target="_blank"
                      className="flex items-center gap-2">
                      <FileUp width={16} height={16} />
                      <span className="text-bodyM ">{attachment.fileName}</span>
                    </Link>
                  ))
                ) : (
                  <span>No files uploaded</span>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  )
}

export default MyProjectVulnerabilityReport
