'use client'

import Link from 'next/link'
import {ArrowLeft, ArrowRight, VerifiedIcon} from 'lucide-react'
import {notFound, useRouter} from 'next/navigation'

import {Button} from '@/components/ui/Button'
import {PATHS} from '@/lib/utils/common/paths'
import Separator from '@/components/ui/Separator'
import {useGetDeduplicatedFinding} from '@/lib/queries/deduplicatedFinding/getDeduplicatedFinding'
import Skeleton from '@/components/ui/Skeleton'
import {useGetFindings} from '@/lib/queries/finding/getFinding'
import {Tabs, TabsList, TabsTrigger} from '@/components/ui/Tabs'

type MyProjectVulnerabilityProps = {
  deduplicatedFindingId: string
  contestId: string
}

const MyProjectVulnerability = ({
  deduplicatedFindingId,
  contestId,
}: MyProjectVulnerabilityProps) => {
  const {data: deduplicatedFinding, isLoading: deduplicatedFindingLoading} =
    useGetDeduplicatedFinding(deduplicatedFindingId)
  const {data: findings, isLoading: findingsLoading} = useGetFindings({
    deduplicatedFindingId,
  })
  const router = useRouter()

  if (deduplicatedFindingLoading || findingsLoading) {
    return (
      <div className="px-24">
        <div className="mb-12">
          <Skeleton className="h-[72px]" />
        </div>
        <Separator />
        <div className="mt-12 flex flex-col gap-3">
          <Skeleton className="h-[72px]" />
          <Skeleton className="h-[72px]" />
          <Skeleton className="h-[72px]" />
        </div>
      </div>
    )
  }

  if (!deduplicatedFinding || !findings) {
    return notFound()
  }

  return (
    <>
      <div className="px-24">
        <div className="flex items-center gap-12">
          <Button
            variant="outline"
            size="small"
            className="flex gap-2 uppercase"
            onClick={() => router.back()}>
            <ArrowLeft width={16} height={16} />
            Go Back
          </Button>
          <div className="flex flex-col gap-3">
            <h1 className="text-headlineS">{deduplicatedFinding.title}</h1>
            <span className="text-titleS">
              {deduplicatedFinding.contest.title}
            </span>
          </div>
        </div>
      </div>
      <div className="mt-12 flex flex-grow flex-col">
        <Tabs value="reports_submitted">
          <TabsList className="self-start px-24">
            <TabsTrigger value="reports_submitted">
              reports submitted
            </TabsTrigger>
          </TabsList>
        </Tabs>
        <Separator />
        <div className="flex flex-grow flex-col bg-black px-24 pb-24 pt-12">
          <div>
            {findings.map((finding) => (
              <div
                key={finding.id}
                className="flex h-[72px] w-full items-center justify-between bg-grey-90 p-4">
                <div className="flex gap-6">
                  {deduplicatedFinding.bestFindingId === finding.id && (
                    <div className="flex items-center gap-1">
                      <VerifiedIcon width={24} height={24} />
                      <span className="text-bodyS">Best</span>
                    </div>
                  )}
                  <span className="text-titleS">{finding.title}</span>
                </div>
                <div className="flex items-center gap-6">
                  <div>
                    <span className="text-bodyM opacity-70">Submited by: </span>
                    <span className="text-bodyM">
                      {finding.author.alias ?? finding.author.id}
                    </span>
                  </div>
                  <Button asChild size="small" variant="default">
                    <Link
                      href={PATHS.myProjectVulnerabilityReport(
                        contestId,
                        deduplicatedFindingId,
                        finding.id,
                      )}>
                      <span>Detail</span>
                      <ArrowRight width={16} height={16} />
                    </Link>
                  </Button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </>
  )
}

export default MyProjectVulnerability
